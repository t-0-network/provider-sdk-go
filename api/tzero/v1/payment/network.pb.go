// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tzero/v1/payment/network.proto

package payment

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	ivms "github.com/t-0-network/provider-sdk-go/api/ivms101/v1/ivms"
	common "github.com/t-0-network/provider-sdk-go/api/tzero/v1/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuoteType int32

const (
	QuoteType_QUOTE_TYPE_UNSPECIFIED QuoteType = 0
	QuoteType_QUOTE_TYPE_REALTIME    QuoteType = 1 // real-time quote must be valid at least for 30 seconds (TBD)
)

// Enum value maps for QuoteType.
var (
	QuoteType_name = map[int32]string{
		0: "QUOTE_TYPE_UNSPECIFIED",
		1: "QUOTE_TYPE_REALTIME",
	}
	QuoteType_value = map[string]int32{
		"QUOTE_TYPE_UNSPECIFIED": 0,
		"QUOTE_TYPE_REALTIME":    1,
	}
)

func (x QuoteType) Enum() *QuoteType {
	p := new(QuoteType)
	*p = x
	return p
}

func (x QuoteType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuoteType) Descriptor() protoreflect.EnumDescriptor {
	return file_tzero_v1_payment_network_proto_enumTypes[0].Descriptor()
}

func (QuoteType) Type() protoreflect.EnumType {
	return &file_tzero_v1_payment_network_proto_enumTypes[0]
}

func (x QuoteType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuoteType.Descriptor instead.
func (QuoteType) EnumDescriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{0}
}

type CreatePaymentResponse_Failure_Reason int32

const (
	CreatePaymentResponse_Failure_REASON_UNSPECIFIED     CreatePaymentResponse_Failure_Reason = 0
	CreatePaymentResponse_Failure_REASON_QUOTE_NOT_FOUND CreatePaymentResponse_Failure_Reason = 10 // No matching quote par for the specified pay-in and payout currencies found or provider limits would exceed by processing this payment
)

// Enum value maps for CreatePaymentResponse_Failure_Reason.
var (
	CreatePaymentResponse_Failure_Reason_name = map[int32]string{
		0:  "REASON_UNSPECIFIED",
		10: "REASON_QUOTE_NOT_FOUND",
	}
	CreatePaymentResponse_Failure_Reason_value = map[string]int32{
		"REASON_UNSPECIFIED":     0,
		"REASON_QUOTE_NOT_FOUND": 10,
	}
)

func (x CreatePaymentResponse_Failure_Reason) Enum() *CreatePaymentResponse_Failure_Reason {
	p := new(CreatePaymentResponse_Failure_Reason)
	*p = x
	return p
}

func (x CreatePaymentResponse_Failure_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreatePaymentResponse_Failure_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_tzero_v1_payment_network_proto_enumTypes[1].Descriptor()
}

func (CreatePaymentResponse_Failure_Reason) Type() protoreflect.EnumType {
	return &file_tzero_v1_payment_network_proto_enumTypes[1]
}

func (x CreatePaymentResponse_Failure_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreatePaymentResponse_Failure_Reason.Descriptor instead.
func (CreatePaymentResponse_Failure_Reason) EnumDescriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{6, 1, 0}
}

// Base currency is always USD, so the quotes are always in USD/currency format.
type UpdateQuoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// Zero or more quotes for pay-out operations, each quote must have a unique currency, and one or more bands, with the
	// unique client_quote_id for each band.
	PayOut []*UpdateQuoteRequest_Quote `protobuf:"bytes,10,rep,name=pay_out,json=payOut,proto3" json:"pay_out,omitempty"`
	// *
	// Zero or more quotes for pay-in operations, each quote must have a unique currency, and one or more bands, with the
	// unique client_quote_id for each band.
	PayIn         []*UpdateQuoteRequest_Quote `protobuf:"bytes,20,rep,name=pay_in,json=payIn,proto3" json:"pay_in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuoteRequest) Reset() {
	*x = UpdateQuoteRequest{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuoteRequest) ProtoMessage() {}

func (x *UpdateQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuoteRequest) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateQuoteRequest) GetPayOut() []*UpdateQuoteRequest_Quote {
	if x != nil {
		return x.PayOut
	}
	return nil
}

func (x *UpdateQuoteRequest) GetPayIn() []*UpdateQuoteRequest_Quote {
	if x != nil {
		return x.PayIn
	}
	return nil
}

type UpdateQuoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuoteResponse) Reset() {
	*x = UpdateQuoteResponse{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuoteResponse) ProtoMessage() {}

func (x *UpdateQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateQuoteResponse) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{1}
}

type GetQuoteRequest struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	PayInCurrency  string                   `protobuf:"bytes,10,opt,name=pay_in_currency,json=payInCurrency,proto3" json:"pay_in_currency,omitempty"`                                      // ISO 4217 currency code, e.g. EUR, GBP, etc. in which the payout should be made
	Amount         *PaymentAmount           `protobuf:"bytes,20,opt,name=amount,proto3" json:"amount,omitempty"`                                                                           // amount
	PayInMethod    common.PaymentMethodType `protobuf:"varint,30,opt,name=pay_in_method,json=payInMethod,proto3,enum=tzero.v1.common.PaymentMethodType" json:"pay_in_method,omitempty"`    // payment method to use for the payout, e.g. bank transfer, card, etc.
	PayOutCurrency string                   `protobuf:"bytes,40,opt,name=pay_out_currency,json=payOutCurrency,proto3" json:"pay_out_currency,omitempty"`                                   // ISO 4217 currency code, e.g. EUR, GBP, etc. in which the payout should be made
	PayOutMethod   common.PaymentMethodType `protobuf:"varint,50,opt,name=pay_out_method,json=payOutMethod,proto3,enum=tzero.v1.common.PaymentMethodType" json:"pay_out_method,omitempty"` // payment method to use for the payout, e.g. bank transfer, card, etc.
	QuoteType      QuoteType                `protobuf:"varint,60,opt,name=quote_type,json=quoteType,proto3,enum=tzero.v1.payment.QuoteType" json:"quote_type,omitempty"`                   // type of the quote, e.g. real-time or guaranteed
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetQuoteRequest) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{2}
}

func (x *GetQuoteRequest) GetPayInCurrency() string {
	if x != nil {
		return x.PayInCurrency
	}
	return ""
}

func (x *GetQuoteRequest) GetAmount() *PaymentAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *GetQuoteRequest) GetPayInMethod() common.PaymentMethodType {
	if x != nil {
		return x.PayInMethod
	}
	return common.PaymentMethodType(0)
}

func (x *GetQuoteRequest) GetPayOutCurrency() string {
	if x != nil {
		return x.PayOutCurrency
	}
	return ""
}

func (x *GetQuoteRequest) GetPayOutMethod() common.PaymentMethodType {
	if x != nil {
		return x.PayOutMethod
	}
	return common.PaymentMethodType(0)
}

func (x *GetQuoteRequest) GetQuoteType() QuoteType {
	if x != nil {
		return x.QuoteType
	}
	return QuoteType_QUOTE_TYPE_UNSPECIFIED
}

type GetQuoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rate          *common.Decimal        `protobuf:"bytes,10,opt,name=rate,proto3" json:"rate,omitempty"`                      // exchange rate as pay_out_currency_rate/pay_in_currency_rate, e.g. BRL/EUR
	Expiration    *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=expiration,proto3" json:"expiration,omitempty"`          // expiration time of the payout quote
	QuoteId       *QuoteId               `protobuf:"bytes,30,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"` // id of the payout quote
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuoteResponse) Reset() {
	*x = GetQuoteResponse{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteResponse) ProtoMessage() {}

func (x *GetQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteResponse.ProtoReflect.Descriptor instead.
func (*GetQuoteResponse) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuoteResponse) GetRate() *common.Decimal {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *GetQuoteResponse) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *GetQuoteResponse) GetQuoteId() *QuoteId {
	if x != nil {
		return x.QuoteId
	}
	return nil
}

type CreatePaymentRequest struct {
	state           protoimpl.MessageState               `protogen:"open.v1"`
	PaymentClientId string                               `protobuf:"bytes,10,opt,name=payment_client_id,json=paymentClientId,proto3" json:"payment_client_id,omitempty"`     // unique client generated id for this payment
	Amount          *PaymentAmount                       `protobuf:"bytes,30,opt,name=amount,proto3" json:"amount,omitempty"`                                                // payment amount
	PayIn           *CreatePaymentRequest_PayIn          `protobuf:"bytes,40,opt,name=pay_in,json=payIn,proto3" json:"pay_in,omitempty"`                                     // pay-in details
	PayOut          *CreatePaymentRequest_PayOut         `protobuf:"bytes,45,opt,name=pay_out,json=payOut,proto3" json:"pay_out,omitempty"`                                  // payout details
	TravelRuleData  *CreatePaymentRequest_TravelRuleData `protobuf:"bytes,100,opt,name=travel_rule_data,json=travelRuleData,proto3,oneof" json:"travel_rule_data,omitempty"` // travel rule data
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreatePaymentRequest) Reset() {
	*x = CreatePaymentRequest{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequest) ProtoMessage() {}

func (x *CreatePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequest) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePaymentRequest) GetPaymentClientId() string {
	if x != nil {
		return x.PaymentClientId
	}
	return ""
}

func (x *CreatePaymentRequest) GetAmount() *PaymentAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *CreatePaymentRequest) GetPayIn() *CreatePaymentRequest_PayIn {
	if x != nil {
		return x.PayIn
	}
	return nil
}

func (x *CreatePaymentRequest) GetPayOut() *CreatePaymentRequest_PayOut {
	if x != nil {
		return x.PayOut
	}
	return nil
}

func (x *CreatePaymentRequest) GetTravelRuleData() *CreatePaymentRequest_TravelRuleData {
	if x != nil {
		return x.TravelRuleData
	}
	return nil
}

type QuoteId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuoteId       int64                  `protobuf:"varint,30,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`          // unique identifier of the quote within the specified provider
	ProviderId    int32                  `protobuf:"varint,40,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"` // provider id of the quote
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuoteId) Reset() {
	*x = QuoteId{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteId) ProtoMessage() {}

func (x *QuoteId) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteId.ProtoReflect.Descriptor instead.
func (*QuoteId) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{5}
}

func (x *QuoteId) GetQuoteId() int64 {
	if x != nil {
		return x.QuoteId
	}
	return 0
}

func (x *QuoteId) GetProviderId() int32 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

type CreatePaymentResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PaymentClientId string                 `protobuf:"bytes,10,opt,name=payment_client_id,json=paymentClientId,proto3" json:"payment_client_id,omitempty"` // client generated id supplied in the request
	// Types that are valid to be assigned to Result:
	//
	//	*CreatePaymentResponse_Success_
	//	*CreatePaymentResponse_Failure_
	Result        isCreatePaymentResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentResponse) Reset() {
	*x = CreatePaymentResponse{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentResponse) ProtoMessage() {}

func (x *CreatePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentResponse.ProtoReflect.Descriptor instead.
func (*CreatePaymentResponse) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePaymentResponse) GetPaymentClientId() string {
	if x != nil {
		return x.PaymentClientId
	}
	return ""
}

func (x *CreatePaymentResponse) GetResult() isCreatePaymentResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CreatePaymentResponse) GetSuccess() *CreatePaymentResponse_Success {
	if x != nil {
		if x, ok := x.Result.(*CreatePaymentResponse_Success_); ok {
			return x.Success
		}
	}
	return nil
}

func (x *CreatePaymentResponse) GetFailure() *CreatePaymentResponse_Failure {
	if x != nil {
		if x, ok := x.Result.(*CreatePaymentResponse_Failure_); ok {
			return x.Failure
		}
	}
	return nil
}

type isCreatePaymentResponse_Result interface {
	isCreatePaymentResponse_Result()
}

type CreatePaymentResponse_Success_ struct {
	// *
	// Success response - means the payment was accepted, but the payout is not yet completed. This means, the network found
	// a suitable quote for the payout currency and amount, and instructed the payout provider to process the payout.
	Success *CreatePaymentResponse_Success `protobuf:"bytes,20,opt,name=success,proto3,oneof"`
}

type CreatePaymentResponse_Failure_ struct {
	// *
	// Failure response - means the payment was not accepted, e.g. the network could not find a suitable quote for the
	// payout currency and amount, or the credit limit is exceeded for the available quotes.
	Failure *CreatePaymentResponse_Failure `protobuf:"bytes,30,opt,name=failure,proto3,oneof"`
}

func (*CreatePaymentResponse_Success_) isCreatePaymentResponse_Result() {}

func (*CreatePaymentResponse_Failure_) isCreatePaymentResponse_Result() {}

type ConfirmPayoutRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	PaymentId uint64                 `protobuf:"varint,10,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"` // payment id assigned by the network, this is the same payment id that was provided in the PayoutRequest
	PayoutId  uint64                 `protobuf:"varint,20,opt,name=payout_id,json=payoutId,proto3" json:"payout_id,omitempty"`    // payout id assigned by the payout provider, this is the same payout id that was provided in the PayoutRequest
	// *
	// Payment receipt might contain metadata about payment recognizable by pay-in provider.
	Receipt       *common.PaymentReceipt `protobuf:"bytes,30,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmPayoutRequest) Reset() {
	*x = ConfirmPayoutRequest{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmPayoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPayoutRequest) ProtoMessage() {}

func (x *ConfirmPayoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPayoutRequest.ProtoReflect.Descriptor instead.
func (*ConfirmPayoutRequest) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{7}
}

func (x *ConfirmPayoutRequest) GetPaymentId() uint64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *ConfirmPayoutRequest) GetPayoutId() uint64 {
	if x != nil {
		return x.PayoutId
	}
	return 0
}

func (x *ConfirmPayoutRequest) GetReceipt() *common.PaymentReceipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type ConfirmPayoutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmPayoutResponse) Reset() {
	*x = ConfirmPayoutResponse{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmPayoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPayoutResponse) ProtoMessage() {}

func (x *ConfirmPayoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPayoutResponse.ProtoReflect.Descriptor instead.
func (*ConfirmPayoutResponse) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{8}
}

// Payment amount could be specified eiter as pay-in amount and then converted to corresponding amount of pay-out amount
// or as pay-out amount, so that pay-in and settlement amounts are calculated accordingly
type PaymentAmount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Amount:
	//
	//	*PaymentAmount_PayInAmount
	//	*PaymentAmount_PayOutAmount
	Amount        isPaymentAmount_Amount `protobuf_oneof:"amount"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentAmount) Reset() {
	*x = PaymentAmount{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentAmount) ProtoMessage() {}

func (x *PaymentAmount) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentAmount.ProtoReflect.Descriptor instead.
func (*PaymentAmount) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{9}
}

func (x *PaymentAmount) GetAmount() isPaymentAmount_Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *PaymentAmount) GetPayInAmount() *common.Decimal {
	if x != nil {
		if x, ok := x.Amount.(*PaymentAmount_PayInAmount); ok {
			return x.PayInAmount
		}
	}
	return nil
}

func (x *PaymentAmount) GetPayOutAmount() *common.Decimal {
	if x != nil {
		if x, ok := x.Amount.(*PaymentAmount_PayOutAmount); ok {
			return x.PayOutAmount
		}
	}
	return nil
}

type isPaymentAmount_Amount interface {
	isPaymentAmount_Amount()
}

type PaymentAmount_PayInAmount struct {
	PayInAmount *common.Decimal `protobuf:"bytes,10,opt,name=pay_in_amount,json=payInAmount,proto3,oneof"` // Amount in the pay-in currency
}

type PaymentAmount_PayOutAmount struct {
	PayOutAmount *common.Decimal `protobuf:"bytes,20,opt,name=pay_out_amount,json=payOutAmount,proto3,oneof"` // Amount in the pay-out currency
}

func (*PaymentAmount_PayInAmount) isPaymentAmount_Amount() {}

func (*PaymentAmount_PayOutAmount) isPaymentAmount_Amount() {}

type UpdateQuoteRequest_Quote struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Currency  string                 `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"` // BRL, EUR, GBP, etc. (ISO 4217 currency code)
	QuoteType QuoteType              `protobuf:"varint,20,opt,name=quote_type,json=quoteType,proto3,enum=tzero.v1.payment.QuoteType" json:"quote_type,omitempty"`
	// Payment method must be specified
	PaymentMethod common.PaymentMethodType         `protobuf:"varint,25,opt,name=payment_method,json=paymentMethod,proto3,enum=tzero.v1.common.PaymentMethodType" json:"payment_method,omitempty"`
	Bands         []*UpdateQuoteRequest_Quote_Band `protobuf:"bytes,30,rep,name=bands,proto3" json:"bands,omitempty"`           // list of bands for this quote
	Expiration    *timestamppb.Timestamp           `protobuf:"bytes,60,opt,name=expiration,proto3" json:"expiration,omitempty"` // expiration time of the quote
	Timestamp     *timestamppb.Timestamp           `protobuf:"bytes,70,opt,name=timestamp,proto3" json:"timestamp,omitempty"`   // timestamp quote was created
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuoteRequest_Quote) Reset() {
	*x = UpdateQuoteRequest_Quote{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuoteRequest_Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuoteRequest_Quote) ProtoMessage() {}

func (x *UpdateQuoteRequest_Quote) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuoteRequest_Quote.ProtoReflect.Descriptor instead.
func (*UpdateQuoteRequest_Quote) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UpdateQuoteRequest_Quote) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateQuoteRequest_Quote) GetQuoteType() QuoteType {
	if x != nil {
		return x.QuoteType
	}
	return QuoteType_QUOTE_TYPE_UNSPECIFIED
}

func (x *UpdateQuoteRequest_Quote) GetPaymentMethod() common.PaymentMethodType {
	if x != nil {
		return x.PaymentMethod
	}
	return common.PaymentMethodType(0)
}

func (x *UpdateQuoteRequest_Quote) GetBands() []*UpdateQuoteRequest_Quote_Band {
	if x != nil {
		return x.Bands
	}
	return nil
}

func (x *UpdateQuoteRequest_Quote) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *UpdateQuoteRequest_Quote) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type UpdateQuoteRequest_Quote_Band struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientQuoteId string                 `protobuf:"bytes,10,opt,name=client_quote_id,json=clientQuoteId,proto3" json:"client_quote_id,omitempty"` // unique client generated id for this band
	MaxAmount     *common.Decimal        `protobuf:"bytes,40,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`               // max amount of USD this quote is applicable for. Please look into documentation for valid amounts.
	Rate          *common.Decimal        `protobuf:"bytes,50,opt,name=rate,proto3" json:"rate,omitempty"`                                          // USD/currency rate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuoteRequest_Quote_Band) Reset() {
	*x = UpdateQuoteRequest_Quote_Band{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuoteRequest_Quote_Band) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuoteRequest_Quote_Band) ProtoMessage() {}

func (x *UpdateQuoteRequest_Quote_Band) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuoteRequest_Quote_Band.ProtoReflect.Descriptor instead.
func (*UpdateQuoteRequest_Quote_Band) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *UpdateQuoteRequest_Quote_Band) GetClientQuoteId() string {
	if x != nil {
		return x.ClientQuoteId
	}
	return ""
}

func (x *UpdateQuoteRequest_Quote_Band) GetMaxAmount() *common.Decimal {
	if x != nil {
		return x.MaxAmount
	}
	return nil
}

func (x *UpdateQuoteRequest_Quote_Band) GetRate() *common.Decimal {
	if x != nil {
		return x.Rate
	}
	return nil
}

// Provider must submit quotes to the network for the specified pay-in currency and payment method
type CreatePaymentRequest_PayIn struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Currency      string                   `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`                                                                        // pay-in currency
	PaymentMethod common.PaymentMethodType `protobuf:"varint,20,opt,name=payment_method,json=paymentMethod,proto3,enum=tzero.v1.common.PaymentMethodType" json:"payment_method,omitempty"` // pay-in payment method
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentRequest_PayIn) Reset() {
	*x = CreatePaymentRequest_PayIn{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentRequest_PayIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequest_PayIn) ProtoMessage() {}

func (x *CreatePaymentRequest_PayIn) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequest_PayIn.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequest_PayIn) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CreatePaymentRequest_PayIn) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreatePaymentRequest_PayIn) GetPaymentMethod() common.PaymentMethodType {
	if x != nil {
		return x.PaymentMethod
	}
	return common.PaymentMethodType(0)
}

type CreatePaymentRequest_PayOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`                                // pay-out currency
	PaymentMethod *common.PaymentMethod  `protobuf:"bytes,20,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"` // pay-in payment details
	QuoteId       *QuoteId               `protobuf:"bytes,100,opt,name=quote_id,json=quoteId,proto3,oneof" json:"quote_id,omitempty"`            // if specified, must be a valid quoteId that was previously returned by the GetPayoutQuote method otherwise last available quote will be used
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentRequest_PayOut) Reset() {
	*x = CreatePaymentRequest_PayOut{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentRequest_PayOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequest_PayOut) ProtoMessage() {}

func (x *CreatePaymentRequest_PayOut) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequest_PayOut.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequest_PayOut) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{4, 1}
}

func (x *CreatePaymentRequest_PayOut) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreatePaymentRequest_PayOut) GetPaymentMethod() *common.PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

func (x *CreatePaymentRequest_PayOut) GetQuoteId() *QuoteId {
	if x != nil {
		return x.QuoteId
	}
	return nil
}

type CreatePaymentRequest_TravelRuleData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// the natural or legal person that requests payment with originating provider
	Originator []*ivms.Person `protobuf:"bytes,10,rep,name=originator,proto3" json:"originator,omitempty"`
	// *
	// the natural or legal person or legal arrangement who is identified
	// by the originator as the receiver of the requested payment.
	Beneficiary   []*ivms.Person `protobuf:"bytes,20,rep,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentRequest_TravelRuleData) Reset() {
	*x = CreatePaymentRequest_TravelRuleData{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentRequest_TravelRuleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentRequest_TravelRuleData) ProtoMessage() {}

func (x *CreatePaymentRequest_TravelRuleData) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentRequest_TravelRuleData.ProtoReflect.Descriptor instead.
func (*CreatePaymentRequest_TravelRuleData) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{4, 2}
}

func (x *CreatePaymentRequest_TravelRuleData) GetOriginator() []*ivms.Person {
	if x != nil {
		return x.Originator
	}
	return nil
}

func (x *CreatePaymentRequest_TravelRuleData) GetBeneficiary() []*ivms.Person {
	if x != nil {
		return x.Beneficiary
	}
	return nil
}

type CreatePaymentResponse_Success struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PaymentId        uint64                 `protobuf:"varint,10,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"` // payment ID assigned by the network
	PayInAmount      *common.Decimal        `protobuf:"bytes,20,opt,name=pay_in_amount,json=payInAmount,proto3" json:"pay_in_amount,omitempty"`
	SettlementAmount *common.Decimal        `protobuf:"bytes,30,opt,name=settlement_amount,json=settlementAmount,proto3" json:"settlement_amount,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreatePaymentResponse_Success) Reset() {
	*x = CreatePaymentResponse_Success{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentResponse_Success) ProtoMessage() {}

func (x *CreatePaymentResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentResponse_Success.ProtoReflect.Descriptor instead.
func (*CreatePaymentResponse_Success) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{6, 0}
}

func (x *CreatePaymentResponse_Success) GetPaymentId() uint64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *CreatePaymentResponse_Success) GetPayInAmount() *common.Decimal {
	if x != nil {
		return x.PayInAmount
	}
	return nil
}

func (x *CreatePaymentResponse_Success) GetSettlementAmount() *common.Decimal {
	if x != nil {
		return x.SettlementAmount
	}
	return nil
}

type CreatePaymentResponse_Failure struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Reason        CreatePaymentResponse_Failure_Reason `protobuf:"varint,10,opt,name=reason,proto3,enum=tzero.v1.payment.CreatePaymentResponse_Failure_Reason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentResponse_Failure) Reset() {
	*x = CreatePaymentResponse_Failure{}
	mi := &file_tzero_v1_payment_network_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentResponse_Failure) ProtoMessage() {}

func (x *CreatePaymentResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_tzero_v1_payment_network_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentResponse_Failure.ProtoReflect.Descriptor instead.
func (*CreatePaymentResponse_Failure) Descriptor() ([]byte, []int) {
	return file_tzero_v1_payment_network_proto_rawDescGZIP(), []int{6, 1}
}

func (x *CreatePaymentResponse_Failure) GetReason() CreatePaymentResponse_Failure_Reason {
	if x != nil {
		return x.Reason
	}
	return CreatePaymentResponse_Failure_REASON_UNSPECIFIED
}

var File_tzero_v1_payment_network_proto protoreflect.FileDescriptor

const file_tzero_v1_payment_network_proto_rawDesc = "" +
	"\n" +
	"\x1etzero/v1/payment/network.proto\x12\x10tzero.v1.payment\x1a\x1ctzero/v1/common/common.proto\x1a$tzero/v1/common/payment_method.proto\x1a%tzero/v1/common/payment_receipt.proto\x1a\x1divms101/v1/ivms/ivms101.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\"\xfb\x05\n" +
	"\x12UpdateQuoteRequest\x12C\n" +
	"\apay_out\x18\n" +
	" \x03(\v2*.tzero.v1.payment.UpdateQuoteRequest.QuoteR\x06payOut\x12A\n" +
	"\x06pay_in\x18\x14 \x03(\v2*.tzero.v1.payment.UpdateQuoteRequest.QuoteR\x05payIn\x1a\xdc\x04\n" +
	"\x05Quote\x120\n" +
	"\bcurrency\x18\n" +
	" \x01(\tB\x14\xbaH\x11r\x0f2\n" +
	"^[A-Z]{3}$\x98\x01\x03R\bcurrency\x12B\n" +
	"\n" +
	"quote_type\x18\x14 \x01(\x0e2\x1b.tzero.v1.payment.QuoteTypeB\x06\xbaH\x03\xc8\x01\x01R\tquoteType\x12Q\n" +
	"\x0epayment_method\x18\x19 \x01(\x0e2\".tzero.v1.common.PaymentMethodTypeB\x06\xbaH\x03\xc8\x01\x01R\rpaymentMethod\x12O\n" +
	"\x05bands\x18\x1e \x03(\v2/.tzero.v1.payment.UpdateQuoteRequest.Quote.BandB\b\xbaH\x05\x92\x01\x02\b\x01R\x05bands\x12D\n" +
	"\n" +
	"expiration\x18< \x01(\v2\x1a.google.protobuf.TimestampB\b\xbaH\x05\xb2\x01\x02@\x01R\n" +
	"expiration\x12@\n" +
	"\ttimestamp\x18F \x01(\v2\x1a.google.protobuf.TimestampB\x06\xbaH\x03\xc8\x01\x01R\ttimestamp\x1a\xb0\x01\n" +
	"\x04Band\x121\n" +
	"\x0fclient_quote_id\x18\n" +
	" \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18@R\rclientQuoteId\x12?\n" +
	"\n" +
	"max_amount\x18( \x01(\v2\x18.tzero.v1.common.DecimalB\x06\xbaH\x03\xc8\x01\x01R\tmaxAmount\x124\n" +
	"\x04rate\x182 \x01(\v2\x18.tzero.v1.common.DecimalB\x06\xbaH\x03\xc8\x01\x01R\x04rate\"\x15\n" +
	"\x13UpdateQuoteResponse\"\xb6\x03\n" +
	"\x0fGetQuoteRequest\x12<\n" +
	"\x0fpay_in_currency\x18\n" +
	" \x01(\tB\x14\xbaH\x11r\x0f2\n" +
	"^[A-Z]{3}$\x98\x01\x03R\rpayInCurrency\x12?\n" +
	"\x06amount\x18\x14 \x01(\v2\x1f.tzero.v1.payment.PaymentAmountB\x06\xbaH\x03\xc8\x01\x01R\x06amount\x12N\n" +
	"\rpay_in_method\x18\x1e \x01(\x0e2\".tzero.v1.common.PaymentMethodTypeB\x06\xbaH\x03\xc8\x01\x01R\vpayInMethod\x12>\n" +
	"\x10pay_out_currency\x18( \x01(\tB\x14\xbaH\x11r\x0f2\n" +
	"^[A-Z]{3}$\x98\x01\x03R\x0epayOutCurrency\x12P\n" +
	"\x0epay_out_method\x182 \x01(\x0e2\".tzero.v1.common.PaymentMethodTypeB\x06\xbaH\x03\xc8\x01\x01R\fpayOutMethod\x12B\n" +
	"\n" +
	"quote_type\x18< \x01(\x0e2\x1b.tzero.v1.payment.QuoteTypeB\x06\xbaH\x03\xc8\x01\x01R\tquoteType\"\xcc\x01\n" +
	"\x10GetQuoteResponse\x124\n" +
	"\x04rate\x18\n" +
	" \x01(\v2\x18.tzero.v1.common.DecimalB\x06\xbaH\x03\xc8\x01\x01R\x04rate\x12D\n" +
	"\n" +
	"expiration\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampB\b\xbaH\x05\xb2\x01\x02@\x01R\n" +
	"expiration\x12<\n" +
	"\bquote_id\x18\x1e \x01(\v2\x19.tzero.v1.payment.QuoteIdB\x06\xbaH\x03\xc8\x01\x01R\aquoteId\"\x94\a\n" +
	"\x14CreatePaymentRequest\x125\n" +
	"\x11payment_client_id\x18\n" +
	" \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18@R\x0fpaymentClientId\x12?\n" +
	"\x06amount\x18\x1e \x01(\v2\x1f.tzero.v1.payment.PaymentAmountB\x06\xbaH\x03\xc8\x01\x01R\x06amount\x12K\n" +
	"\x06pay_in\x18( \x01(\v2,.tzero.v1.payment.CreatePaymentRequest.PayInB\x06\xbaH\x03\xc8\x01\x01R\x05payIn\x12N\n" +
	"\apay_out\x18- \x01(\v2-.tzero.v1.payment.CreatePaymentRequest.PayOutB\x06\xbaH\x03\xc8\x01\x01R\x06payOut\x12d\n" +
	"\x10travel_rule_data\x18d \x01(\v25.tzero.v1.payment.CreatePaymentRequest.TravelRuleDataH\x00R\x0etravelRuleData\x88\x01\x01\x1a\x8c\x01\n" +
	"\x05PayIn\x120\n" +
	"\bcurrency\x18\n" +
	" \x01(\tB\x14\xbaH\x11r\x0f2\n" +
	"^[A-Z]{3}$\x98\x01\x03R\bcurrency\x12Q\n" +
	"\x0epayment_method\x18\x14 \x01(\x0e2\".tzero.v1.common.PaymentMethodTypeB\x06\xbaH\x03\xc8\x01\x01R\rpaymentMethod\x1a\xd1\x01\n" +
	"\x06PayOut\x120\n" +
	"\bcurrency\x18\n" +
	" \x01(\tB\x14\xbaH\x11r\x0f2\n" +
	"^[A-Z]{3}$\x98\x01\x03R\bcurrency\x12M\n" +
	"\x0epayment_method\x18\x14 \x01(\v2\x1e.tzero.v1.common.PaymentMethodB\x06\xbaH\x03\xc8\x01\x01R\rpaymentMethod\x129\n" +
	"\bquote_id\x18d \x01(\v2\x19.tzero.v1.payment.QuoteIdH\x00R\aquoteId\x88\x01\x01B\v\n" +
	"\t_quote_id\x1a\x88\x01\n" +
	"\x0eTravelRuleData\x129\n" +
	"\n" +
	"originator\x18\n" +
	" \x03(\v2\x0f.ivms101.PersonB\b\xbaH\x05\x92\x01\x02\b\x01R\n" +
	"originator\x12;\n" +
	"\vbeneficiary\x18\x14 \x03(\v2\x0f.ivms101.PersonB\b\xbaH\x05\x92\x01\x02\b\x01R\vbeneficiaryB\x13\n" +
	"\x11_travel_rule_data\"W\n" +
	"\aQuoteId\x12\"\n" +
	"\bquote_id\x18\x1e \x01(\x03B\a\xbaH\x04\"\x02 \x00R\aquoteId\x12(\n" +
	"\vprovider_id\x18( \x01(\x05B\a\xbaH\x04\x1a\x02 \x00R\n" +
	"providerId\"\xda\x04\n" +
	"\x15CreatePaymentResponse\x123\n" +
	"\x11payment_client_id\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0fpaymentClientId\x12K\n" +
	"\asuccess\x18\x14 \x01(\v2/.tzero.v1.payment.CreatePaymentResponse.SuccessH\x00R\asuccess\x12K\n" +
	"\afailure\x18\x1e \x01(\v2/.tzero.v1.payment.CreatePaymentResponse.FailureH\x00R\afailure\x1a\xc6\x01\n" +
	"\aSuccess\x12&\n" +
	"\n" +
	"payment_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\tpaymentId\x12D\n" +
	"\rpay_in_amount\x18\x14 \x01(\v2\x18.tzero.v1.common.DecimalB\x06\xbaH\x03\xc8\x01\x01R\vpayInAmount\x12M\n" +
	"\x11settlement_amount\x18\x1e \x01(\v2\x18.tzero.v1.common.DecimalB\x06\xbaH\x03\xc8\x01\x01R\x10settlementAmount\x1a\x97\x01\n" +
	"\aFailure\x12N\n" +
	"\x06reason\x18\n" +
	" \x01(\x0e26.tzero.v1.payment.CreatePaymentResponse.Failure.ReasonR\x06reason\"<\n" +
	"\x06Reason\x12\x16\n" +
	"\x12REASON_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16REASON_QUOTE_NOT_FOUND\x10\n" +
	"B\x0f\n" +
	"\x06result\x12\x05\xbaH\x02\b\x01\"\x9f\x01\n" +
	"\x14ConfirmPayoutRequest\x12&\n" +
	"\n" +
	"payment_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\tpaymentId\x12$\n" +
	"\tpayout_id\x18\x14 \x01(\x04B\a\xbaH\x042\x02 \x00R\bpayoutId\x129\n" +
	"\areceipt\x18\x1e \x01(\v2\x1f.tzero.v1.common.PaymentReceiptR\areceipt\"\x17\n" +
	"\x15ConfirmPayoutResponse\"\xa2\x01\n" +
	"\rPaymentAmount\x12>\n" +
	"\rpay_in_amount\x18\n" +
	" \x01(\v2\x18.tzero.v1.common.DecimalH\x00R\vpayInAmount\x12@\n" +
	"\x0epay_out_amount\x18\x14 \x01(\v2\x18.tzero.v1.common.DecimalH\x00R\fpayOutAmountB\x0f\n" +
	"\x06amount\x12\x05\xbaH\x02\b\x01*@\n" +
	"\tQuoteType\x12\x1a\n" +
	"\x16QUOTE_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13QUOTE_TYPE_REALTIME\x10\x012\x97\x03\n" +
	"\x0eNetworkService\x12_\n" +
	"\vUpdateQuote\x12$.tzero.v1.payment.UpdateQuoteRequest\x1a%.tzero.v1.payment.UpdateQuoteResponse\"\x03\x90\x02\x02\x12V\n" +
	"\bGetQuote\x12!.tzero.v1.payment.GetQuoteRequest\x1a\".tzero.v1.payment.GetQuoteResponse\"\x03\x90\x02\x01\x12e\n" +
	"\rCreatePayment\x12&.tzero.v1.payment.CreatePaymentRequest\x1a'.tzero.v1.payment.CreatePaymentResponse\"\x03\x90\x02\x02\x12e\n" +
	"\rConfirmPayout\x12&.tzero.v1.payment.ConfirmPayoutRequest\x1a'.tzero.v1.payment.ConfirmPayoutResponse\"\x03\x90\x02\x02B\xc3\x01\n" +
	"\x14com.tzero.v1.paymentB\fNetworkProtoP\x01Z;github.com/t-0-network/provider-sdk-go/api/tzero/v1/payment\xa2\x02\x03TVP\xaa\x02\x10Tzero.V1.Payment\xca\x02\x10Tzero\\V1\\Payment\xe2\x02\x1cTzero\\V1\\Payment\\GPBMetadata\xea\x02\x12Tzero::V1::Paymentb\x06proto3"

var (
	file_tzero_v1_payment_network_proto_rawDescOnce sync.Once
	file_tzero_v1_payment_network_proto_rawDescData []byte
)

func file_tzero_v1_payment_network_proto_rawDescGZIP() []byte {
	file_tzero_v1_payment_network_proto_rawDescOnce.Do(func() {
		file_tzero_v1_payment_network_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tzero_v1_payment_network_proto_rawDesc), len(file_tzero_v1_payment_network_proto_rawDesc)))
	})
	return file_tzero_v1_payment_network_proto_rawDescData
}

var file_tzero_v1_payment_network_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tzero_v1_payment_network_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_tzero_v1_payment_network_proto_goTypes = []any{
	(QuoteType)(0), // 0: tzero.v1.payment.QuoteType
	(CreatePaymentResponse_Failure_Reason)(0),   // 1: tzero.v1.payment.CreatePaymentResponse.Failure.Reason
	(*UpdateQuoteRequest)(nil),                  // 2: tzero.v1.payment.UpdateQuoteRequest
	(*UpdateQuoteResponse)(nil),                 // 3: tzero.v1.payment.UpdateQuoteResponse
	(*GetQuoteRequest)(nil),                     // 4: tzero.v1.payment.GetQuoteRequest
	(*GetQuoteResponse)(nil),                    // 5: tzero.v1.payment.GetQuoteResponse
	(*CreatePaymentRequest)(nil),                // 6: tzero.v1.payment.CreatePaymentRequest
	(*QuoteId)(nil),                             // 7: tzero.v1.payment.QuoteId
	(*CreatePaymentResponse)(nil),               // 8: tzero.v1.payment.CreatePaymentResponse
	(*ConfirmPayoutRequest)(nil),                // 9: tzero.v1.payment.ConfirmPayoutRequest
	(*ConfirmPayoutResponse)(nil),               // 10: tzero.v1.payment.ConfirmPayoutResponse
	(*PaymentAmount)(nil),                       // 11: tzero.v1.payment.PaymentAmount
	(*UpdateQuoteRequest_Quote)(nil),            // 12: tzero.v1.payment.UpdateQuoteRequest.Quote
	(*UpdateQuoteRequest_Quote_Band)(nil),       // 13: tzero.v1.payment.UpdateQuoteRequest.Quote.Band
	(*CreatePaymentRequest_PayIn)(nil),          // 14: tzero.v1.payment.CreatePaymentRequest.PayIn
	(*CreatePaymentRequest_PayOut)(nil),         // 15: tzero.v1.payment.CreatePaymentRequest.PayOut
	(*CreatePaymentRequest_TravelRuleData)(nil), // 16: tzero.v1.payment.CreatePaymentRequest.TravelRuleData
	(*CreatePaymentResponse_Success)(nil),       // 17: tzero.v1.payment.CreatePaymentResponse.Success
	(*CreatePaymentResponse_Failure)(nil),       // 18: tzero.v1.payment.CreatePaymentResponse.Failure
	(common.PaymentMethodType)(0),               // 19: tzero.v1.common.PaymentMethodType
	(*common.Decimal)(nil),                      // 20: tzero.v1.common.Decimal
	(*timestamppb.Timestamp)(nil),               // 21: google.protobuf.Timestamp
	(*common.PaymentReceipt)(nil),               // 22: tzero.v1.common.PaymentReceipt
	(*common.PaymentMethod)(nil),                // 23: tzero.v1.common.PaymentMethod
	(*ivms.Person)(nil),                         // 24: ivms101.Person
}
var file_tzero_v1_payment_network_proto_depIdxs = []int32{
	12, // 0: tzero.v1.payment.UpdateQuoteRequest.pay_out:type_name -> tzero.v1.payment.UpdateQuoteRequest.Quote
	12, // 1: tzero.v1.payment.UpdateQuoteRequest.pay_in:type_name -> tzero.v1.payment.UpdateQuoteRequest.Quote
	11, // 2: tzero.v1.payment.GetQuoteRequest.amount:type_name -> tzero.v1.payment.PaymentAmount
	19, // 3: tzero.v1.payment.GetQuoteRequest.pay_in_method:type_name -> tzero.v1.common.PaymentMethodType
	19, // 4: tzero.v1.payment.GetQuoteRequest.pay_out_method:type_name -> tzero.v1.common.PaymentMethodType
	0,  // 5: tzero.v1.payment.GetQuoteRequest.quote_type:type_name -> tzero.v1.payment.QuoteType
	20, // 6: tzero.v1.payment.GetQuoteResponse.rate:type_name -> tzero.v1.common.Decimal
	21, // 7: tzero.v1.payment.GetQuoteResponse.expiration:type_name -> google.protobuf.Timestamp
	7,  // 8: tzero.v1.payment.GetQuoteResponse.quote_id:type_name -> tzero.v1.payment.QuoteId
	11, // 9: tzero.v1.payment.CreatePaymentRequest.amount:type_name -> tzero.v1.payment.PaymentAmount
	14, // 10: tzero.v1.payment.CreatePaymentRequest.pay_in:type_name -> tzero.v1.payment.CreatePaymentRequest.PayIn
	15, // 11: tzero.v1.payment.CreatePaymentRequest.pay_out:type_name -> tzero.v1.payment.CreatePaymentRequest.PayOut
	16, // 12: tzero.v1.payment.CreatePaymentRequest.travel_rule_data:type_name -> tzero.v1.payment.CreatePaymentRequest.TravelRuleData
	17, // 13: tzero.v1.payment.CreatePaymentResponse.success:type_name -> tzero.v1.payment.CreatePaymentResponse.Success
	18, // 14: tzero.v1.payment.CreatePaymentResponse.failure:type_name -> tzero.v1.payment.CreatePaymentResponse.Failure
	22, // 15: tzero.v1.payment.ConfirmPayoutRequest.receipt:type_name -> tzero.v1.common.PaymentReceipt
	20, // 16: tzero.v1.payment.PaymentAmount.pay_in_amount:type_name -> tzero.v1.common.Decimal
	20, // 17: tzero.v1.payment.PaymentAmount.pay_out_amount:type_name -> tzero.v1.common.Decimal
	0,  // 18: tzero.v1.payment.UpdateQuoteRequest.Quote.quote_type:type_name -> tzero.v1.payment.QuoteType
	19, // 19: tzero.v1.payment.UpdateQuoteRequest.Quote.payment_method:type_name -> tzero.v1.common.PaymentMethodType
	13, // 20: tzero.v1.payment.UpdateQuoteRequest.Quote.bands:type_name -> tzero.v1.payment.UpdateQuoteRequest.Quote.Band
	21, // 21: tzero.v1.payment.UpdateQuoteRequest.Quote.expiration:type_name -> google.protobuf.Timestamp
	21, // 22: tzero.v1.payment.UpdateQuoteRequest.Quote.timestamp:type_name -> google.protobuf.Timestamp
	20, // 23: tzero.v1.payment.UpdateQuoteRequest.Quote.Band.max_amount:type_name -> tzero.v1.common.Decimal
	20, // 24: tzero.v1.payment.UpdateQuoteRequest.Quote.Band.rate:type_name -> tzero.v1.common.Decimal
	19, // 25: tzero.v1.payment.CreatePaymentRequest.PayIn.payment_method:type_name -> tzero.v1.common.PaymentMethodType
	23, // 26: tzero.v1.payment.CreatePaymentRequest.PayOut.payment_method:type_name -> tzero.v1.common.PaymentMethod
	7,  // 27: tzero.v1.payment.CreatePaymentRequest.PayOut.quote_id:type_name -> tzero.v1.payment.QuoteId
	24, // 28: tzero.v1.payment.CreatePaymentRequest.TravelRuleData.originator:type_name -> ivms101.Person
	24, // 29: tzero.v1.payment.CreatePaymentRequest.TravelRuleData.beneficiary:type_name -> ivms101.Person
	20, // 30: tzero.v1.payment.CreatePaymentResponse.Success.pay_in_amount:type_name -> tzero.v1.common.Decimal
	20, // 31: tzero.v1.payment.CreatePaymentResponse.Success.settlement_amount:type_name -> tzero.v1.common.Decimal
	1,  // 32: tzero.v1.payment.CreatePaymentResponse.Failure.reason:type_name -> tzero.v1.payment.CreatePaymentResponse.Failure.Reason
	2,  // 33: tzero.v1.payment.NetworkService.UpdateQuote:input_type -> tzero.v1.payment.UpdateQuoteRequest
	4,  // 34: tzero.v1.payment.NetworkService.GetQuote:input_type -> tzero.v1.payment.GetQuoteRequest
	6,  // 35: tzero.v1.payment.NetworkService.CreatePayment:input_type -> tzero.v1.payment.CreatePaymentRequest
	9,  // 36: tzero.v1.payment.NetworkService.ConfirmPayout:input_type -> tzero.v1.payment.ConfirmPayoutRequest
	3,  // 37: tzero.v1.payment.NetworkService.UpdateQuote:output_type -> tzero.v1.payment.UpdateQuoteResponse
	5,  // 38: tzero.v1.payment.NetworkService.GetQuote:output_type -> tzero.v1.payment.GetQuoteResponse
	8,  // 39: tzero.v1.payment.NetworkService.CreatePayment:output_type -> tzero.v1.payment.CreatePaymentResponse
	10, // 40: tzero.v1.payment.NetworkService.ConfirmPayout:output_type -> tzero.v1.payment.ConfirmPayoutResponse
	37, // [37:41] is the sub-list for method output_type
	33, // [33:37] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_tzero_v1_payment_network_proto_init() }
func file_tzero_v1_payment_network_proto_init() {
	if File_tzero_v1_payment_network_proto != nil {
		return
	}
	file_tzero_v1_payment_network_proto_msgTypes[4].OneofWrappers = []any{}
	file_tzero_v1_payment_network_proto_msgTypes[6].OneofWrappers = []any{
		(*CreatePaymentResponse_Success_)(nil),
		(*CreatePaymentResponse_Failure_)(nil),
	}
	file_tzero_v1_payment_network_proto_msgTypes[9].OneofWrappers = []any{
		(*PaymentAmount_PayInAmount)(nil),
		(*PaymentAmount_PayOutAmount)(nil),
	}
	file_tzero_v1_payment_network_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tzero_v1_payment_network_proto_rawDesc), len(file_tzero_v1_payment_network_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tzero_v1_payment_network_proto_goTypes,
		DependencyIndexes: file_tzero_v1_payment_network_proto_depIdxs,
		EnumInfos:         file_tzero_v1_payment_network_proto_enumTypes,
		MessageInfos:      file_tzero_v1_payment_network_proto_msgTypes,
	}.Build()
	File_tzero_v1_payment_network_proto = out.File
	file_tzero_v1_payment_network_proto_goTypes = nil
	file_tzero_v1_payment_network_proto_depIdxs = nil
}
